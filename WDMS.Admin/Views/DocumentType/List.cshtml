@model IEnumerable<WDMS.Domain.Entities.DocumentType>
@using System.Security.Claims

@{
    ViewData["Title"] = "Document Types";
    var hasItems = Model != null && Model.Any();
}
@{
    bool CanWrite = User.IsInRole("ReadWrite") || User.HasClaim("access_level", "ReadWrite");
}
<div class="container mt-3">

    <div class="page-header d-flex align-items-center mb-3">
        <h2 class="mb-0">Document Types</h2>
    @if (CanWrite)
    {
        <a asp-action="CreateDocumentType"
           class="btn btn-primary btn-sm btn-header ms-auto">
            Add Type
        </a>
    }
    </div>

    @if (TempData["Success"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["Success"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @TempData["Error"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }


    <div class="card shadow-sm rounded-3 overflow-hidden">
        <div class="table-responsive">
            <table class="table table-striped table-hover align-middle mb-0 table-comfy">
                <thead class="table-light">
                    <tr>
                        <th style="width:40%">Name</th>
                        <th>Status</th>
                        <th>Created</th>
                        <th class="text-start" style="width:160px">Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @if (!hasItems)
                    {
                        <tr>
                            <td colspan="4" class="text-center text-muted py-4">
                                No document types found.
                            </td>
                        </tr>
                    }
                    else
                    {
                        foreach (var dt in Model)
                        {
                            <tr>
                                <td class="fw-medium">@dt.Name</td>
                                <td>
                                    @if (dt.IsActive)
                                    {
                                        <span class="badge bg-success">Active</span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-secondary">Inactive</span>
                                    }
                                </td>
                                <td>@dt.CreatedAt.ToString("yyyy-MM-dd HH:mm")</td>
                                <td class="text-start">
                                    <div class="d-flex align-items-center gap-2">
                                @if (CanWrite)
                                {
                                        <a asp-action="EditDocumentType"
                                           asp-route-id="@dt.DocumentTypeId"
                                           class="btn btn-sm btn-secondary">Edit</a>

                                        <form asp-action="DeleteDocumentType"
                                              asp-route-id="@dt.DocumentTypeId"
                                              method="post"
                                              class="m-0 d-inline-block"
                                              onsubmit="return confirm('Delete @dt.Name ?');">
                                            @Html.AntiForgeryToken()
                                            <button type="submit" class="btn btn-sm btn-danger">Delete</button>
                                        </form>
                                        }
                                        else
                                        {
                                            <button class="btn btn-sm btn-secondary" disabled title="Read-only access">Edit</button>
                                            <button class="btn btn-sm btn-danger" disabled title="Read-only access">Delete</button>
                                        }
                                    </div>
                                </td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>
<script>
    setTimeout(() => {
      const el = document.querySelector('.alert.alert-success');
      if (el) bootstrap.Alert.getOrCreateInstance(el).close();
    }, 3000);
</script>