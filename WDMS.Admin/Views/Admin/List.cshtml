@model IEnumerable<WDMS.Application.DTOs.AdminResponse>
@using System.Security.Claims
@{
    ViewData["Title"] = "Admins";
    var hasItems = Model != null && Model.Any();
}

@{
    bool CanWrite = User.IsInRole("ReadWrite") || User.HasClaim("access_level", "ReadWrite");
}

<div class="container mt-3">
    
    <div class="page-header d-flex align-items-center mb-3">
        <h2 class="mb-0">Admins</h2>
    @if (CanWrite)
    {
        <a asp-action="Create"
           class="btn btn-primary btn-sm btn-header ms-auto">
            Add Admin
        </a>
    }
    </div>

    @if (TempData["Success"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["Success"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @TempData["Error"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }


    <div class="card shadow-sm rounded-3 overflow-hidden">
        <div class="table-responsive">
            <table class="table table-striped table-hover align-middle mb-0 table-comfy">
                <thead class="table-light">
                    <tr>
                        <th style="width:30%">Email</th>
                        <th>Access Level</th>
                        <th>Created</th>
                        <th>Status</th>
                        <th class="text-start" style="width:160px">Actions</th>
                    </tr>
                </thead>
                <tbody>
                @if (!hasItems)
                {
                    <tr>
                        <td colspan="5" class="text-center text-muted py-4">
                            No admins found.
                        </td>
                    </tr>
                }
                else
                {
                    foreach (var admin in Model)
                    {
                        <tr>
                            <td class="fw-medium">@admin.Email</td>
                            <td>@admin.AccessLevel</td>
                            <td>@admin.CreatedAt.ToString("yyyy-MM-dd HH:mm")</td>
                            <td>
                                @if (admin.IsActive)
                                {
                                    <span class="badge bg-success">Active</span>
                                }
                                else
                                {
                                    <span class="badge bg-secondary">Inactive</span>
                                }
                            </td>
                                <td class="text-start">
                                    <div class="d-flex align-items-center gap-2">
                                        @if (CanWrite)
                                        {
                                            <a asp-action="Edit" asp-route-id="@admin.AdminId" class="btn btn-sm btn-secondary">Edit</a>
                                            <form asp-action="Delete" asp-route-id="@admin.AdminId" method="post" class="m-0 d-inline-block"
                                                  onsubmit="return confirm('Delete @admin.Email ?');">
                                                @Html.AntiForgeryToken()
                                                <button type="submit" class="btn btn-sm btn-danger">Delete</button>
                                            </form>
                                        }
                                        else
                                        {
                                            <button class="btn btn-sm btn-secondary" disabled title="Read-only access">Edit</button>
                                            <button class="btn btn-sm btn-danger" disabled title="Read-only access">Delete</button>
                                        }
                                    </div>
                                </td>

                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>
</div>
</div>
<script>
    setTimeout(() => {
      const el = document.querySelector('.alert.alert-success');
      if (el) bootstrap.Alert.getOrCreateInstance(el).close();
    }, 3000);
</script>